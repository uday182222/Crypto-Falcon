"""Add XP milestone tracking fields to users table

Revision ID: 86380bd5d7a0
Revises: 23f382e180c8
Create Date: 2025-07-22 21:15:10.788878

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86380bd5d7a0'
down_revision: Union[str, Sequence[str], None] = '23f382e180c8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_democoin_packages_id', table_name='democoin_packages')
    op.drop_table('democoin_packages')
    op.drop_index('ix_democoin_purchases_id', table_name='democoin_purchases')
    op.drop_table('democoin_purchases')
    op.add_column('users', sa.Column('level', sa.Integer(), nullable=False, server_default='1'))
    op.add_column('users', sa.Column('xp', sa.Integer(), nullable=False, server_default='0'))
    op.add_column('users', sa.Column('xp_first_gain_awarded', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('users', sa.Column('xp_lost_all_awarded', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('users', sa.Column('xp_best_rank', sa.Integer(), nullable=True))
    op.drop_index('ix_wallets_user_id', table_name='wallets')
    op.create_unique_constraint(None, 'wallets', ['user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'wallets', type_='unique')
    op.create_index('ix_wallets_user_id', 'wallets', ['user_id'], unique=False)
    op.drop_column('users', 'xp_best_rank')
    op.drop_column('users', 'xp_lost_all_awarded')
    op.drop_column('users', 'xp_first_gain_awarded')
    op.drop_column('users', 'xp')
    op.drop_column('users', 'level')
    op.create_table('democoin_purchases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('razorpay_order_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('razorpay_payment_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('razorpay_signature', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount_inr', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('coins_purchased', sa.NUMERIC(precision=20, scale=8), autoincrement=False, nullable=False),
    sa.Column('coins_per_inr', sa.NUMERIC(precision=20, scale=8), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'SUCCESS', 'FAILED', 'CANCELLED', name='purchasestatus'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('payment_completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='democoin_purchases_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='democoin_purchases_pkey'),
    sa.UniqueConstraint('razorpay_order_id', name='democoin_purchases_razorpay_order_id_key')
    )
    op.create_index('ix_democoin_purchases_id', 'democoin_purchases', ['id'], unique=False)
    op.create_table('democoin_packages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('coins', sa.NUMERIC(precision=20, scale=8), autoincrement=False, nullable=False),
    sa.Column('price_inr', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('coins_per_inr', sa.NUMERIC(precision=20, scale=8), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bonus_percentage', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='democoin_packages_pkey')
    )
    op.create_index('ix_democoin_packages_id', 'democoin_packages', ['id'], unique=False)
    # ### end Alembic commands ###
