version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: motionfalcon-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-crypto_db}
      POSTGRES_USER: ${POSTGRES_USER:-motionfalcon}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-motionfalcon123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - motionfalcon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-motionfalcon}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: motionfalcon-redis-prod
    ports:
      - "6379:6379"
    networks:
      - motionfalcon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./crypto-backend
      dockerfile: Dockerfile
    container_name: motionfalcon-backend-prod
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-motionfalcon}:${POSTGRES_PASSWORD:-motionfalcon123}@postgres:5432/${POSTGRES_DB:-crypto_db}
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./crypto-backend:/app
    networks:
      - motionfalcon-network
    restart: unless-stopped
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4"

  # Frontend
  frontend:
    build:
      context: ./crypto-frontend
      dockerfile: Dockerfile
    container_name: motionfalcon-frontend-prod
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8000}
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - motionfalcon-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: motionfalcon-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - motionfalcon-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  motionfalcon-network:
    driver: bridge
